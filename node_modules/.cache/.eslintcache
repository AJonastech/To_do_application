[{"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/index.js":"1","/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/App.js":"2","/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/reportWebVitals.js":"3","/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/components/Nav.jsx":"4","/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/components/Todo-Items.jsx":"5","/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/components/Done_items.jsx":"6","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/index.js":"7","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/App.js":"8","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/reportWebVitals.js":"9","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Done_items.jsx":"10","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Todo-Items.jsx":"11","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Modal.jsx":"12","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Nav.jsx":"13","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Categories_card.jsx":"14","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Nosearch.jsx":"15"},{"size":535,"mtime":1677256204766,"results":"16","hashOfConfig":"17"},{"size":3552,"mtime":1677276291681,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1677256204767,"results":"19","hashOfConfig":"17"},{"size":482,"mtime":1677267771470,"results":"20","hashOfConfig":"17"},{"size":307,"mtime":1677275703647,"results":"21","hashOfConfig":"17"},{"size":209,"mtime":1677267892520,"results":"22","hashOfConfig":"17"},{"size":535,"mtime":1677256204766,"results":"23","hashOfConfig":"24"},{"size":4451,"mtime":1677506870068,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1677256204767,"results":"26","hashOfConfig":"24"},{"size":286,"mtime":1677332278987,"results":"27","hashOfConfig":"24"},{"size":1633,"mtime":1677504472193,"results":"28","hashOfConfig":"24"},{"size":2512,"mtime":1677506408192,"results":"29","hashOfConfig":"24"},{"size":610,"mtime":1677494906933,"results":"30","hashOfConfig":"24"},{"size":3166,"mtime":1677508144165,"results":"31","hashOfConfig":"24"},{"size":195,"mtime":1677507374908,"results":"32","hashOfConfig":"24"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k3ap28",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ukwgxp",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/index.js",[],[],"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/App.js",[],[],"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/reportWebVitals.js",[],[],"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/components/Nav.jsx",[],[],"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/components/Todo-Items.jsx",[],[],"/Users/stephenmac/Desktop/MyPortfolioProjeects/to-do-application/src/components/Done_items.jsx",[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/index.js",[],[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/App.js",["81","82","83"],["84"],"/* eslint-disable jsx-a11y/alt-text */\nimport { useState } from 'react';\nimport './App.css';\nimport Categoriescard from './components/Categories_card';\nimport Modal from './components/Modal';\nimport Nav from './components/Nav';\nimport product from \"./components/images/product.png\";\n\nfunction App() {\n  const [todoCategories, setTodoCategories] = useState([]);\n  //This taskDate is a string of input from the input element on the Modal, data is stored\n  //here first before it is transferred to the taskArray which contains an array of all todo\n  //yet to be done.\n  const [taskData, setTaskData]= useState(\"\");\n  //This is used to store the category of task to be done\n  const [title, setTitle]=useState(\"\");\n  const [taskArray, setTaskArray]=useState([]);\n  //Helps to collect info on background color of task category cards\n  const [color,setColor]= useState(\"blue\");\n  const [searchData, setSearchData]= useState(\"\");\n  const [edit, setEdit] =useState(\"\");\n  const [msg,setMsg] = useState([\"\",\"\"])\n \n  const updateTask =(index,keyid,data)=>{\n    todoCategories[index][\"taskDetails\"][keyid][\"detail\"]=data;\n    console.log(\"test\")\n    setTodoCategories([...todoCategories]);\n    console.log(todoCategories);\n  \n  }\n  const findData = (catTitle)=>{\n    catTitle.toLowerCase();\n     todoCategories.map((category)=>{\n       \n     })\n  }\n  const deleteCategory = (index)=>{\n    const filterData = todoCategories.filter((arr, id)=>{\n      if (index !== id){\n         return arr;\n      }\n    });\n    setTodoCategories([...filterData]);\n }\nconst toggletaskState = (Category, task)=>{\n if (todoCategories[Category][\"taskDetails\"][task][\"status\"]==true){\n\n  todoCategories[Category][\"taskDetails\"][task][\"status\"]=false;\n\nsetTodoCategories([...todoCategories]);\n }else{\n\n  todoCategories[Category][\"taskDetails\"][task][\"status\"]=true;\n\nsetTodoCategories([...todoCategories]);\n }\n}\n\n  const submitColor = (color)=>{\n     \n       setColor(color);\n \n  }\n  const displayModal = ()=>{\n    const element = document.getElementById(\"modal\");\n    element.classList.remove(\"hidden\");\n  }\n  const closeModal = ()=>{\n    const element = document.getElementById(\"modal\");\n    element.classList.add(\"hidden\");\n  }\n  const Addtask = ()=>{\n    if (taskData===\"\"){\n      msg[1]=\"This input cannot be empty\";\n      setMsg([...msg])\n    }else if(taskArray.length>3){\n      msg[1]=\"You can only have 4 tasks per category.\"\n      setMsg([...msg]);\n      }else{\n      setTaskArray([...taskArray, taskData]);\n      setTaskData(\"\");\n    }\n    \n    \n  }\n  const addCategoryTodo = ()=>{\n    if (title === \"\"){\n      msg[0]=\"This input cannot be empty.\";\n      console.log(msg);\n   setMsg([...msg]);\n    }else if(taskArray.length===0 ){\n   msg[1]=\"Please create at least one task.\";\n   setMsg([...msg]);\n    }else{\n      const emptyObject = {};\n      emptyObject['Title'] = title;\n      emptyObject[\"taskDetails\"] = taskArray.map((tasks)=>{\n             return {\"detail\": tasks, \"status\":true}\n      });\n      emptyObject[\"color\"] = color;\n      \n      setTodoCategories([...todoCategories, emptyObject]);\n      setTitle(\"\");\n      setTaskArray([]);\n      setColor(\"\");\n      const element = document.getElementById(\"modal\");\n      element.classList.add(\"hidden\");\n  }}\n  function noTask(){\n  if (todoCategories.length===0){\n    console.log(\"hello\");\n    return (<div className=' md:w-[450px] mx-auto w-[80%] mt-10 '>\n       \n    <img className=\"w-[100%] \"src={product}/>\n    \n    <h2 className='text-center text-gray-500 text-2xl'>Click the plus icon to add a task category</h2>\n  </div>);\n  \n  }\n}\n  return (\n    <>\n    \n    <Nav searchData={searchData} findData={findData}setSearchData={setSearchData}/>\n    {noTask()}\n    <button onClick={ displayModal}id=\"custom-btn\">\n    <i className=\"text-2xl text-blue-500 fas fa-plus\"></i>\n      </button>\n    <main className='font-poppins flex justify-center px-3 py-3 relative  '>\n      <div className=' cards   w-[90%]'>\n        \n     <Categoriescard updateTask={updateTask} edit={edit} setEdit={setEdit} searchData={searchData} todoCategories={todoCategories} deleteCategory={deleteCategory} toggleTaskState={toggletaskState}/>\n      </div>\n    </main>\n    <Modal msg={msg} setMsg={setMsg} closeModal={closeModal} title={title} setTitle={setTitle} setTaskData={setTaskData} taskData={taskData} taskArray={taskArray} \n    Addtask={Addtask} addCategoryTodo={addCategoryTodo} submitColor={submitColor}/>\n    </>\n  );\n}\n\nexport default App;\n","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/reportWebVitals.js",[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Done_items.jsx",[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Todo-Items.jsx",[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Modal.jsx",[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Nav.jsx",[],[],"/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Categories_card.jsx",["85"],["86","87","88","89"],"/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { useEffect,useRef } from 'react';\nimport TodoItems from './Todo-Items'\nimport Doneitems from './Done_items'\nimport Nosearch from './Nosearch';\nfunction Categoriescard({updateTask, todoCategories,setTodoCategories, edit, setEdit, deleteCategory,searchData, toggleTaskState}) {\n  const refOne = useRef(null);\nuseEffect(()=>{\n  document.addEventListener(\"click\",handleClickOutside, true)},\n  [])\n\nconst handleClickOutside = (e)=>{\nif(!refOne.current.contains(e.target)){\nvar elementList =document.getElementsByClassName(\"settings\");\nfor (let i= 0; i< elementList.length; i++){\n  elementList[i].classList.add(\"hidden\");\n}\n\n}\n}\nconst displaySettings = (index)=>{\n  document.getElementsByClassName(\"settings\")[index].classList.remove(\"hidden\");\n}\nvar test =0;\n\n    return (\n        <>\n        {\n               todoCategories.filter((post) => {\n                if (searchData === '') {\n                  return post;\n                } else if (post.Title.toLowerCase().includes(searchData.toLowerCase())) {\n                  return post;\n                }else{\n                  test =1;\n                }\n              }).map((categories, index)=>(\n          <div key={index} id=\"Categories\" className={'relative card mt-4    rounded-br-3xl  px-3 py-3 text-white bg-'+categories[\"color\"]+'-400'}>\n            \n              \n            <h3 className=\"font-bold flex justify-between mb-3 text-xl\"> {categories[\"Title\"]}\n            <button onClick={()=>{ displaySettings(index)}}><i className=\"fas fa-ellipsis-v\"></i></button>\n            </h3>\n            <div  ref={refOne} className='hidden settings absolute z-10 border-t-2 border-r-2 border-gray-100 top-[-10px] right-[-10px] w-[80%] bg-white text-xl p-4 text-gray-500'>\n            \n              <p className='border-b-2 border-gray-100 mb-2'>\n              <button onClick={()=>{deleteCategory(index)}} >Delete Category</button>\n              </p>\n              <p className='border-b-2 border-gray-100 mb-2'>\n\n              \n              <button>Add new tasks</button>\n              </p>\n            </div>\n          {\n            // eslint-disable-next-line array-callback-return\n            categories[\"taskDetails\"].map(function(Tasks, id) {if (Tasks[\"status\"]===true){\n              \n                   return (<TodoItems updateTask={updateTask} edit={edit} setEdit={setEdit} todoCategories={todoCategories} toggleTaskState={toggleTaskState} key={id} keyid={id} index={index} desc={Tasks[\"detail\"]}/>)\n                }\n               \n          })\n          }\n           \n    \n          \n           <h4> Accomplished tasks </h4>\n           {\n            // eslint-disable-next-line array-callback-return\n            categories[\"taskDetails\"].map(function(Tasks, id) {if (Tasks[\"status\"]===false){\n              \n                   return (<Doneitems key={id} toggleTaskState={toggleTaskState} keyid={id} index={index}  desc={Tasks[\"detail\"]}/>)\n                }\n               \n          })\n          }\n          \n          \n          </div>\n          \n            ))\n         \n    } \n   \n    </>\n    )\n}\n\nexport default Categoriescard\n","/Users/stephenmac/Desktop/Git_commit files/To_do_application/src/components/Nosearch.jsx",[],[],{"ruleId":"90","severity":1,"message":"91","line":33,"column":35,"nodeType":"92","messageId":"93","endLine":33,"endColumn":37},{"ruleId":"90","severity":1,"message":"94","line":38,"column":55,"nodeType":"92","messageId":"95","endLine":38,"endColumn":57},{"ruleId":"96","severity":1,"message":"97","line":46,"column":61,"nodeType":"98","messageId":"99","endLine":46,"endColumn":63},{"ruleId":"100","severity":1,"message":"101","line":114,"column":5,"nodeType":"102","endLine":114,"endColumn":46,"suppressions":"103"},{"ruleId":"90","severity":1,"message":"94","line":30,"column":45,"nodeType":"92","messageId":"95","endLine":30,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":16,"suppressions":"108"},{"ruleId":"104","severity":1,"message":"109","line":25,"column":5,"nodeType":"106","messageId":"107","endLine":25,"endColumn":9,"suppressions":"110"},{"ruleId":"90","severity":1,"message":"111","line":58,"column":43,"nodeType":"112","messageId":"95","endLine":58,"endColumn":51,"suppressions":"113"},{"ruleId":"90","severity":1,"message":"111","line":71,"column":43,"nodeType":"112","messageId":"95","endLine":71,"endColumn":51,"suppressions":"114"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["115"],"no-unused-vars","'Nosearch' is defined but never used.","Identifier","unusedVar",["116"],"'test' is assigned a value but never used.",["117"],"Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression",["118"],["119"],{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},"directive",""]